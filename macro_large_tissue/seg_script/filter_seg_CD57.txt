//dir=getDirectory("mouse");
//print(dir)
setBatchMode(true);
print("\\Clear");

minSize=23;
maxSize=38;
background_threshold=100;	           	
dir = getArgument;
if (dir=="") 
	exit ("No argument!");

print("Working dir: "+dir+"\n");

if(!File.exists(dir+"SEG")) 
      File.mkdir(dir+"SEG");
//if(!File.exists(dir+"FILTERED")) 
      //File.mkdir(dir+"FILTERED");
      

input_dir = dir+"filtered_NUC/";
files=getFileList(input_dir);
print("Nb of processing images: "+files.length+"\n");
count=0;
for(f=0;f<files.length;f++)
{
     if(!File.isDirectory(input_dir+files[f])) {
				name=files[f];
				
				if(endsWith(name,'.tif') | endsWith(name,'.tiff')){
					//print("Get the right channel : "+name);
          count=count+1;
          
					short_name = substring(name,0,indexOf(name,'_NUC.tif'));					print(count+"_______________________________________\n");
					//print(name);
					//open(dir+name);
					//run("Stack to Images");
					//selectWindow("Blue");
					//setOption("ScaleConversions", true);
					//run("8-bit");
					//run("Grays");
					//saveAs("Tiff",dir+name);
					//run("Close");
          
          seg_output=dir+"SEG/"+short_name+"_SEG.tif";
          if(File.exists(seg_output)) {
            print("---------------------------");
            print("SEG output is exist, skip this image: "+name);
            print(" ");
          } else{
            print("Loading image: "+name);
            print("---------------------------");
            start = getTime();
            print(start/1000);
  					open(input_dir+name);
  					h=getHeight();
  					w=getWidth();
				  	print('Image: '+name+"   h:   "+h+"  w:   "+w);
				  	
            selectWindow(name);
						run("Median...", "radius=2");
						run("32-bit");
			      run("Bandpass Filter...", "filter_large="+maxSize+" filter_small="+minSize+" suppress=None tolerance=5");
						run("Enhance Contrast...", "saturated=0");
						run("16-bit");
						
						//saveAs("Tiff",input_dir+"FILTERED/"+"BP_"+name);
						//open(input_dir+"FILTERED/"+"BP_"+name);
						//selectWindow("BP_"+name);
						rename("BP_dapi");
						print("Segmenting...");
						
						// usually seeds_threshold=30000
						run("3D Spot Segmentation", "seeds_threshold=35000 local_background=0 radius_0=2 radius_1=4 radius_2=6 weigth=0.50 radius_max=20 sd_value=1.90 local_threshold=[Gaussian fit] seg_spot=Block watershed volume_min=800 volume_max=100000 seeds=Automatic spots=BP_dapi radius_for_seeds=2 output=[Label Image]"); 
						
						selectWindow("seg");
						run("3-3-2 RGB");
					 	saveAs("Tiff",seg_output);
					 	run("Close All");
					 	print("Time of execution is: "+(getTime()-start)/1000); 
		 	      print(" ");
				 	
          }
					
						
					list = getList("window.titles");
			    for (i=0; i<list.length; i++){
			    	winame = list[i];
			      selectWindow(winame);
			     	run("Close");
			    } 

					
					
           }
           
    }

}
print("_________________________\n");
print("Nb of processed images:  "+count);
print("Completed");

//if(!File.exists(dir+"log")) File.mkdir(dir+"log");
//selectWindow("Log");
//saveAs("Text", dir+ "segment_log.txt");
setBatchMode(false);








